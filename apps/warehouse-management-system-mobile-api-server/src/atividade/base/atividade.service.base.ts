/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Atividade as PrismaAtividade } from "@prisma/client";

export class AtividadeServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.AtividadeCountArgs, "select">
  ): Promise<number> {
    return this.prisma.atividade.count(args);
  }

  async atividades(
    args: Prisma.AtividadeFindManyArgs
  ): Promise<PrismaAtividade[]> {
    return this.prisma.atividade.findMany(args);
  }
  async atividade(
    args: Prisma.AtividadeFindUniqueArgs
  ): Promise<PrismaAtividade | null> {
    return this.prisma.atividade.findUnique(args);
  }
  async createAtividade(
    args: Prisma.AtividadeCreateArgs
  ): Promise<PrismaAtividade> {
    return this.prisma.atividade.create(args);
  }
  async updateAtividade(
    args: Prisma.AtividadeUpdateArgs
  ): Promise<PrismaAtividade> {
    return this.prisma.atividade.update(args);
  }
  async deleteAtividade(
    args: Prisma.AtividadeDeleteArgs
  ): Promise<PrismaAtividade> {
    return this.prisma.atividade.delete(args);
  }
}
