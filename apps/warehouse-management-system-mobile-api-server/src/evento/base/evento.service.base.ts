/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Evento as PrismaEvento } from "@prisma/client";

export class EventoServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.EventoCountArgs, "select">): Promise<number> {
    return this.prisma.evento.count(args);
  }

  async eventos(args: Prisma.EventoFindManyArgs): Promise<PrismaEvento[]> {
    return this.prisma.evento.findMany(args);
  }
  async evento(
    args: Prisma.EventoFindUniqueArgs
  ): Promise<PrismaEvento | null> {
    return this.prisma.evento.findUnique(args);
  }
  async createEvento(args: Prisma.EventoCreateArgs): Promise<PrismaEvento> {
    return this.prisma.evento.create(args);
  }
  async updateEvento(args: Prisma.EventoUpdateArgs): Promise<PrismaEvento> {
    return this.prisma.evento.update(args);
  }
  async deleteEvento(args: Prisma.EventoDeleteArgs): Promise<PrismaEvento> {
    return this.prisma.evento.delete(args);
  }
}
