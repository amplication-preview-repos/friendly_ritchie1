/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Motorista as PrismaMotorista } from "@prisma/client";

export class MotoristaServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.MotoristaCountArgs, "select">
  ): Promise<number> {
    return this.prisma.motorista.count(args);
  }

  async motoristas(
    args: Prisma.MotoristaFindManyArgs
  ): Promise<PrismaMotorista[]> {
    return this.prisma.motorista.findMany(args);
  }
  async motorista(
    args: Prisma.MotoristaFindUniqueArgs
  ): Promise<PrismaMotorista | null> {
    return this.prisma.motorista.findUnique(args);
  }
  async createMotorista(
    args: Prisma.MotoristaCreateArgs
  ): Promise<PrismaMotorista> {
    return this.prisma.motorista.create(args);
  }
  async updateMotorista(
    args: Prisma.MotoristaUpdateArgs
  ): Promise<PrismaMotorista> {
    return this.prisma.motorista.update(args);
  }
  async deleteMotorista(
    args: Prisma.MotoristaDeleteArgs
  ): Promise<PrismaMotorista> {
    return this.prisma.motorista.delete(args);
  }
}
